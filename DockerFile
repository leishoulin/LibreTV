FROM node:20-alpine AS builder

# 安装依赖并构建前端（如果需要）
WORKDIR /usr/src/app
COPY package.json ./
RUN npm install
COPY . .
# RUN npm run build  # 如果是 React/Vue 等项目，执行构建命令

# 第二阶段：最终运行环境（Nginx + Node.js）
FROM fabiocicerchia/nginx-lua:1.27.5-alpine3.21.3

LABEL maintainer="LibreTV Team"
LABEL description="LibreTV - 免费在线视频搜索与观看平台"

# 设置工作目录
WORKDIR /usr/share/nginx/html

# 复制应用文件
COPY . /usr/share/nginx/html

# 复制前端构建结果
# COPY --from=builder /usr/src/app/dist /usr/share/nginx/html

# 复制 server.mjs 和相关文件
COPY --from=builder /usr/src/app/server.mjs /usr/src/app/
COPY --from=builder /usr/src/app/package.json /usr/src/app/

# 安装 Node.js 依赖
RUN cd /usr/src/app && npm install

# 替换默认的 Nginx 配置（包含反向代理）
COPY nginx.conf /etc/nginx/conf.d/default.conf

# 添加入口脚本
COPY docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.sh

# 暴露端口
EXPOSE 80

# 启动脚本控制 Nginx + Node.js
ENTRYPOINT ["/docker-entrypoint.sh"]

# 默认启动命令（会被 entrypoint.sh 控制）
CMD ["sh", "-c", "nginx -g 'daemon off;'"]